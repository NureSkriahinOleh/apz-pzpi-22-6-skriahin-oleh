МІНІСТЕРСТВО ОСВІТИ ТА НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ



Кафедра програмної інженерії


ЗВІТ
З дисципліни «Архітектура програмного забезпечення»
З практичного заняття №2
На тему: «Архітектура програмної системи Twitch»



Виконав:								Перевірив:
ст. гр. ПЗПІ-22-6				Ст. вик. каф. ПІ
Скрягін О.С.						Сокорчук І.П.





Харків 2025 
1 ІСТОРІЯ ЗМІН
Таблиця 1.1 – Історія змін 
№	Дата	Версія звіту	Опис змін та виправлень 
1	02.05.2025	0.1	Створено розділ «Історія змін»
2	01.05.2025	0.1	Створено розділ «Завдання»
3	02.05.2025	0.1	Створено розділ “Опис виконаної роботи”
4	02.05.2025	0.1	Створено розділ “Висновки”
5	01.05.2025	0.2	Додані слайди презентації у Додаток Б
6	02.05.2025	0.2	Додані посилання і хронологічний опис доповіді у Додаток А

 
2 ЗАВДАННЯ
1.	Підготувати доповідь про архітектуру однієї з відомих складних програмних систем.
2.	Створити та оформити слайди презентації доповіді.
3.	Створити та опублікувати на YouTube відеозапис доповіді.
4.	Оформити та завантажити на dl.nure.ua звіт до виконаної роботи.
5.	При потребі створити та налаштувати у GitHub обліковий запис для облікового запису студента в домені @nure.ua.
6.	Створити для виконання завдань з дисципліни GitHub репозиторій iз вказаним на https://dl.nure.ua іменем та з головною гілкою main.
7.	Створити у корені створеного репозиторію файл README.md з вказаним далі змістом та вказані далі директорії для окремих завдань.
8.	Експортувати звіт у файл у простому текстововому форматі та завантажити цей файл у директорію Pract2 у репозиторії GitHub.
9.	Завантажити у вказану далі піддиректорію увесь програмний код, який розглядається у доповіді ПЗ2.  
3 ОПИС ВИКОНАНОЇ РОБОТИ
У рамках другого практичного завдання було обрано складну програмну систему — стрімінгову платформу Twitch. Основна мета полягала в дослідженні архітектури цієї системи, аналізі її розвитку та ключових технічних рішень, які забезпечують масштабованість і стабільність роботи.
Першим етапом стало збирання інформації про еволюцію архітектури Twitch — від монолітної структури до сучасної мікросервісної моделі. Було детально розглянуто, які саме проблеми зумовили перехід до мікросервісів і як це позитивно вплинуло на систему.
Окрема увага приділена відеоінфраструктурі: принципам роботи відеострімінгу, протоколам RTMP, HLS, WebRTC, використанню CDN (Akamai, CloudFront) та інструментам для кодування відео (OBS, FFmpeg). Було пояснено, як Twitch досягає мінімальної затримки та масштабує доставку контенту.
Розглянуто архітектуру чат-сервісу Twitch, яка дозволяє обробляти мільйони повідомлень за хвилину завдяки розподіленій системі, шардингу та відмові від централізованого зберігання історії.
Було створено слайд-презентацію з візуальними схемами, прикладами, технічними термінами та структурованим змістом. Після цього було записано відео-доповідь та опубліковано її на YouTube.  
4 ВИСНОВКИ
У процесі виконання практичного завдання було поглиблено розуміння принципів архітектури складних розподілених систем на прикладі Twitch. Аналіз реальної масштабованої платформи дав змогу побачити, як вирішуються проблеми навантаження, затримки, взаємодії сервісів і збереження стабільності.  
ДОДАТОК А
Посилання на відеозапис доповіді та текст хронологічного опису доповіді
Відеозапис доповіді на YouTube: https://youtu.be/i-54GxzuY90.
Хронологічний опис доповіді:
0:00 - Вступна частина
0:39 - Історія створення Twitch
1:29 - Початкова архітектура: моноліт
2:15 - Перехід до мікросервісної архітектури
2:52 - Основні компоненти: Відео
4:40 - Оптимізація відеоінфраструктури
5:25 - Основні компоненти: Чат
6:05 - Архітектура чату
6:50 - Основні компоненти
7:25 - Мови та фреймворки
7:56 - Інфраструктура AWS
8:36 - Технічні виклики та рішення
9:09 - Висновки  
ДОДАТОК Б
 
Рисунок Б.1 – Вступний слайд

 
Рисунок Б.2 – Історія створення Twitch
 
Рисунок Б.3 – Початкова архітектура: моноліт

 
Рисунок Б.4 – Перехід до мікросервісної архітектури


 
Рисунок Б.5 – Основні компоненти: Відео

 
Рисунок Б.6 – Оптимізація відеоінфраструктури

 
Рисунок Б.7 – Основні компоненти: Чат

 
Рисунок Б.8 – Архітектура чату

 
Рисунок Б.9 – Основні компоненти

 
Рисунок Б.10 – Мови та фреймворки

 
Рисунок Б.11 – Інфраструктура AWS

 
Рисунок Б.12 – Технічні виклики та рішення

 
 
Рисунок Б.13 – Висновки

