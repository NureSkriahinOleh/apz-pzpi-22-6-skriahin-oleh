МІНІСТЕРСТВО ОСВІТИ ТА НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ



Кафедра програмної інженерії


ЗВІТ
З дисципліни «Архітектура програмного забезпечення»
З лабораторної роботи №1
На тему: «Розробка vision & scope»


Виконав:								        Перевірив:
ст. гр. ПЗПІ-22-6 							доц. Сокорчук І.П.
Скрягін О.С.




Харків 2025 
1 ІСТОРІЯ ЗМІН
Таблиця 1.1 – Історія змін 
№	Дата	Версія звіту	Опис змін та виправлень 
1	03.05.2025	0.1	Створено розділ “Історія змін”
2	25.04.2025	0.1	Створено розділ “Завдання”
3	03.05.2025	0.1	Створено розділ “Опис виконаної роботи”
4	03.05.2025	0.1	Створено розділ “Висновки”
5	03.05.2025	0.1	Додано посилання на відеозапис доповіді та текст хронологічного опису у Додаток А
6	29.04.2025	0.1	Додано відновлений документ Vision and Scope у Додаток Б

 
2 ЗАВДАННЯ
	Взяти раніше підготовлений документ Vision and Scope, який описував лише серверну та IoT-частини проєкту, та оновити його з урахуванням розширення програмної системи.
	За потреби перевірити та відкоригувати розділи 1.1 (Background) і 1.2 (Business Opportunity) відповідно до нової структури системи та її потенційних можливостей.
	У розділах 2.1 (Vision Statement) та 2.2 (Major Features) оновити опис проєкту, додавши компоненти веб- і мобільного застосунків, а також розширення функціональності, які впливають на бізнес-логіку та взаємодію користувачів.
	У розділі 3.1 (Scope of Initial Release) викласти повний опис всієї системи, включаючи:
	серверну частину з реалізованою бізнес-логікою;
	засоби математичної обробки та резервного копіювання;
	трирівневу систему адміністрування;
	IoT-компоненти;
	веб- та мобільні клієнти.
	У розділі 3.2 (Scope of Subsequent Releases) описати можливі напрямки розвитку системи із застосуванням технологій штучного інтелекту. Зокрема:
	визначити способи застосування ШІ для покращення роботи системи;
	описати типи даних, які можна збирати для навчання моделей;
	обґрунтувати доцільність самостійного навчання, донавчання моделей або використання готових AI-рішень.
 
3 ОПИС ВИКОНАНОЇ РОБОТИ
У процесі оновлення документа Vision and Scope було розширено первинну структуру системи, що раніше включала лише серверну та IoT-частини. Додано описи вебпорталу та мобільного застосунку, оновлено бізнес-можливості, архітектуру та функціональність відповідно до нової концепції. Внесено корективи до розділів 1.1 та 1.2 згідно з актуальними вимогами. У розділах 2.1 та 2.2 уточнено бачення системи та ключові функції з урахуванням нових компонентів. У розділі 3.1 деталізовано повний склад системи, включаючи засоби обробки, резервного копіювання та багаторівневої адміністрації. У розділі 3.2 запропоновано напрямки розвитку системи із застосуванням ШІ, зокрема – можливості його використання, збору даних та варіанти навчання моделей.
 
4 ВИСНОВКИ
У результаті виконаної роботи було розширено функціональні можливості програмної системи, що включає інтеграцію веб- та мобільних компонентів. Також враховано потенціал використання технологій штучного інтелекту для подальшого розвитку системи, зокрема для покращення аналізу даних та автоматизації процесів. 
ДОДАТОК А
Посилання на відеозапис доповіді та текст хронологічного опису доповіді
Відеозапис доповіді на YouTube: https://youtu.be/hL1-ESQ0piA.
Хронологічний опис доповіді:
0:00 - Вступ
0:22 - Business Requirements, Background
1:23 - Business Requirements, Business Opportunity
3:05 - Vision of the Solution, Vision Statement
4:05 - Vision of the Solution, Major Features
5:53 - Scope and Limitations, Scope of Initial Release
8:46 - Scope and Limitations, Scope of Subsequent Releases
11:05 - Scope and Limitations, Limitations and Exclusions
12:30 - Business Context, Operating Environment 


ДОДАТОК Б
Vision and Scope Document
for
SmartShield
Version 2.0
Prepared by ПЗПІ-22-6 Скрягін Олег
Харківський національний університет радіоелектроніки
28.04.2025 
Table of Contents

Table of Contents	7
Revision History	7
1.	Business Requirements	8
1.1.	Background	8
1.2.	Business Opportunity	8
2.	Vision of the Solution	9
2.1.	Vision Statement	9
2.2.	Major Features	10
3.	Scope and Limitations	11
3.1.	Scope of Initial Release	11
3.2.	Scope of Subsequent Releases	13
	3.3	Limitations and Exclusions	14
4.	Business Context	15
4.3.	Operating Environment	15




Revision History


Name	Date	Reason For Changes	Version
Oleh Skriahin	23.11.2024		1.0
Oleh Skriahin	28.04.2025		2.0
 
	Business Requirements
	Background 
Сучасні торгові центри є об’єктами підвищеного ризику через велику кількість відвідувачів, наявність складних інженерних систем та потенційну можливість виникнення надзвичайних ситуацій, таких як пожежі, витоки газу або задимлення. Традиційні системи пожежної безпеки часто мають обмежений функціонал, не забезпечують достатнього рівня автоматизації, візуалізації та своєчасного реагування.
Мета проєкту — розробити програмну систему з IoT-компонентом, яка забезпечить безперервний моніторинг та оперативне реагування на надзвичайні ситуації у реальному часі. Система використовує камери відеоспостереження, датчики руху, диму, температури, газу та вологості.
Окрім збору даних, важливою частиною є веб-інтерфейс для операторів, мобільний застосунок для персоналу та панель адміністратора для управління рівнями доступу, журналами подій та інтеграцією з іншими системами. Кінцева мета — підвищити рівень безпеки, мінімізувати матеріальні втрати та зберегти людські життя за рахунок швидкого прийняття рішень на основі точних даних.
1.2 Business Opportunities
На ринку IoT-систем для пожежної безпеки присутні великі гравці, такі як Honeywell Connected Safety, Bosch Building Technologies та Siemens Smart Infrastructure. Вони пропонують високотехнологічні рішення, однак більшість з них мають суттєві недоліки: високу вартість, складність інтеграції, а також обмежену гнучкість у масштабуванні для невеликих чи середніх об’єктів, зокрема торгових центрів з обмеженим бюджетом.
Розроблювана система має низку конкурентних переваг:
	Інтегрований підхід: поєднання даних від відеоспостереження та багатьох типів датчиків (диму, температури, газу, вологості, руху) для формування повної картини подій у режимі реального часу.
	Доступна вартість: використання недорогих апаратних рішень та хмарних технологій дає змогу значно зменшити витрати на впровадження й обслуговування системи.
	Гнучкість і масштабованість: можливість інтегрувати систему з наявною інфраструктурою та поступово додавати нові модулі або функціональність (наприклад, підтримку нових типів датчиків чи аналітики).
	Зручний доступ і керування: наявність веб-інтерфейсу для операторів, мобільного застосунку для персоналу та панелі адміністратора дозволяє керувати системою з будь-якого місця й пристрою.
	Готовність до впровадження ШІ: архітектура системи передбачає можливість подальшої інтеграції інтелектуальних алгоритмів для аналізу даних, прогнозування ризиків і надання рекомендацій.
Таким чином, запропоноване рішення є більш доступним, адаптивним і зручним у використанні, ніж традиційні промислові аналоги, що відкриває нові можливості для безпечної експлуатації торгових центрів навіть за умов обмежених ресурсів.
	Vision of the Solution
2.1 Vision Statement
Розроблювана система забезпечує комплексний підхід до управління пожежною безпекою в торгових центрах, використовуючи сучасні технології IoT. Продукт об'єднує камери відеоспостереження, датчики руху, диму, температури, газу та вологості для оперативного моніторингу та реагування на небезпечні ситуації.
Система дозволяє:
	Забезпечити безперервний моніторинг подій у реальному часі з відображенням на інтерактивному веб-інтерфейсі.
	Швидко виявляти потенційні загрози, такі як пожежі чи витік газу.
	Надсилати миттєві сповіщення до мобільного додатку для інформування охоронців, співробітників та відвідувачів.
	Надавати користувачам доступ до актуальної інформації через зручний інтерфейс вебпорталу та мобільного застосунку.
	Автоматизувати процеси збору, зберігання та аналізу даних для подальшого підвищення ефективності безпекових заходів.
Реалізація цієї системи сприятиме мінімізації ризиків у торгових центрах, підвищенню рівня безпеки та створенню комфортного середовища для відвідувачів і персоналу.
2.2 Major Features
MF-1: Підключення камер відеоспостереження та різних типів датчиків (руху, диму, температури, газу, вологості) для безперервного моніторингу у реальному часі.
MF-2: Автоматичне надсилання сповіщень до мобільного додатку у разі виявлення небезпечної ситуації (пожежа, витік газу тощо), з можливістю розсилки сповіщень охоронцям, персоналу та іншим відповідальним особам.
MF-3: Збереження відеозаписів та даних від датчиків у базі даних для подальшого аналізу, перегляду історії подій та формування аналітичних звітів.
MF-4: Функція тривожної кнопки у мобільному додатку для негайного виклику охорони у разі виявлення загрози або небезпечної ситуації.
MF-5: Автоматична генерація звітів про безпеку, включно з деталями про інциденти, статистикою активності датчиків та інформацією про порушення.
MF-6: Візуалізація даних у зручному вебінтерфейсі (фронтенд-портал) для керівництва та охоронного персоналу — перегляд подій у реальному часі, доступ до звітів, логів та записів із камер.
MF-7: Реалізація математичної бізнес-логіки для автоматичного обчислення індексу пожежної небезпеки (ІПН) у конкретній локації на основі останніх показників температури, вологості та газового складу повітря: 
ІПН= (T∙G)/(H+1),
де T — температура, G — рівень газів, H — вологість.
Якщо ІПН перевищує встановлений поріг, система позначає відповідний лог як потенційно небезпечний для подальшої обробки.
MF-8: Модуль адміністрування системи з функціоналом для:
	управління користувачами, сенсорами та доступами;
	перевірки та оновлення інформації в базі даних;
	моніторингу стану бази даних і забезпечення її продуктивності;
	технічної підтримки та резервного копіювання даних.
	Scope and Limitations
3.1 Scope of Initial Release
3.1.1 Серверна частина
Серверна частина виконує ключову роль у системі управління пожежною безпекою торгових центрів. У рамках першого випуску буде реалізовано такі функції:
	Моніторинг стану безпеки: отримання даних від IoT-пристроїв, таких як димові датчики, теплові сенсори та датчики газу.
	Обробка аварійних ситуацій: аналіз отриманих даних для виявлення потенційних загроз і автоматична генерація сигналів тривоги.
	Інтеграція з аварійними службами: передача критичних даних до відповідних служб (пожежна охорона, служба безпеки) у разі надзвичайної ситуації.
	Система сповіщень: інформування адміністрації торгового центру через email або push-сповіщення про виявлені ризики чи порушення правил безпеки.
3.1.2 IoT-клієнт
IoT-клієнт забезпечуватиме взаємодію системи з датчиками та іншими пристроями. Основна функціональність IoT-клієнта включає:
	Збір даних із сенсорів: обробка показників датчиків диму, температури, вологи, рівня газу та інших параметрів.
	Передача даних на сервер: синхронізація показників у реальному часі для оперативного реагування на зміну умов.
	Оновлення пристроїв: можливість дистанційного оновлення програмного забезпечення сенсорів через сервер.
	Тестування системи: перевірка працездатності датчиків та їхнього з’єднання з сервером для гарантії безперебійної роботи системи.
3.1.3 Мобільний застосунок
Мобільний застосунок надає користувачам швидкий доступ до функціоналу системи. У рамках першого випуску буде реалізовано:
	Отримання сповіщень: оперативне інформування про виявлені загрози або порушення.
	Функція тривожної кнопки: можливість вручну ініціювати сигнал тривоги з мобільного пристрою.
	Перегляд подій: доступ до історії сповіщень, рівня індексу пожежної небезпеки (ІПН) та активності сенсорів у конкретних локаціях.
	Аутентифікація користувача: захищений доступ до персоніфікованої інформації залежно від ролі користувача.
3.1.4 Вебпортал (фронтенд)
Вебпортал забезпечує інтерфейс для адміністрації та керівного складу. У рамках першого випуску реалізуються такі можливості:
	Доступ до логів та аналітики: перегляд історичних даних, журналів інцидентів, графіків зміни параметрів середовища, аналітики за періодами.
	Формування звітів: автоматичне або ручне створення звітів щодо пожежної безпеки, ефективності реагування та стану обладнання.
	Керування користувачами: створення облікових записів, розподіл прав доступу, призначення ролей для забезпечення безпечного використання системи.
	Адміністрування системи: управління обліковими записами, призначення ролей, налаштування сповіщень, контроль за активністю користувачів.
	Адміністрування бази даних: налаштування резервного копіювання, індексація даних для оптимізації запитів, моніторинг продуктивності та безпеки бази даних.
	 Scope of Subsequent Releases
У наступних релізах передбачається інтеграція компонентів штучного інтелекту (ШІ) для підвищення ефективності, точності та автоматизації системи. Передбачено реалізацію таких ключових напрямів:
3.2.1 Застосування ШІ
Штучний інтелект буде використано для:
	Прогнозування інцидентів: моделі машинного навчання аналізуватимуть динаміку сенсорних даних (температура, вологість, рівень газів) для передбачення ймовірності виникнення пожежі ще до спрацювання сигналізації.
	Інтелектуальна фільтрація тривог: алгоритми зможуть відрізняти помилкові спрацювання (наприклад, через пил або пар) від реальних загроз, зменшуючи кількість хибних тривог.
	Автоматичне розпізнавання ситуацій з відео: використання комп’ютерного зору для виявлення диму, вогню, або підозрілої поведінки людей у відеопотоці з камер.
3.2.2 Збирання даних
Для навчання та вдосконалення моделей будуть використовуватись:
	Логи з сенсорів: температурні, газові, вологісні дані у часовій послідовності, включно з метками тривог.
	Відеозаписи інцидентів: відео з камер спостереження, синхронізовані з часом виявлення загроз, для навчання моделей розпізнавання вогню або диму.
	Журнали реакцій персоналу: дані про те, як швидко та ефективно реагував персонал на сповіщення системи, що дозволить моделі оцінювати ймовірну ефективність рішень.
3.2.3 Навчання та використання моделей
Можливі три підходи:
	Дообучення існуючих моделей (transfer learning) — для розпізнавання вогню або диму можна використовувати попередньо навчені моделі комп’ютерного зору, адаптуючи їх на власних відеоданих.
	Створення власних моделей — для прогнозування індексу пожежної небезпеки на основі складних залежностей сенсорних даних може бути доцільно навчити власну модель із нуля.
	Інтеграція із зовнішніми API ШІ — наприклад, використання сервісів Google Cloud Vision або AWS Rekognition для швидкого виявлення диму/вогню без необхідності локального навчання.
Оптимальний варіант — комбінувати підходи: базові задачі (відеоаналіз) вирішувати через API, а спеціалізовані (аналіз сенсорних шаблонів, прогнозування ризиків) — на основі локального дообучення моделей із накопичених даних.
	 Limitations and Exclusions
Попри широку функціональність, передбачену в першому випуску системи та майбутніх релізах, існують певні обмеження та свідомі виключення:
3.3.1 Обмежена автономність IoT-пристроїв
IoT-клієнти не мають повної автономності — у разі втрати зв’язку з сервером вони не приймають рішення про тривогу самостійно, а лише зберігають дані локально. Це зроблено з міркувань безпеки, щоб уникнути хибних спрацювань на рівні пристроїв.
3.3.2 Відсутність прямого інтерфейсу для пожежних служб
Система передбачає передачу тривожних повідомлень до служб, але інтерактивного вебінтерфейсу для зовнішніх аварійних служб не буде реалізовано — через вимоги до інформаційної безпеки та обмеження на сторонній доступ. Замість цього використовується автоматична передача даних через захищені канали.
3.3.3 Не передбачено управління евакуацією
Система не керує евакуаційними маршрутами чи системами оповіщення людей у реальному часі. Цей функціонал виключено через складність фізичної інтеграції з інфраструктурою ТЦ та фокус першого релізу на виявленні загроз.
3.3.4 Відсутність повноцінної відеоаналітики
Хоча система підтримує роботу з відеопотоками, аналіз відео в реальному часі не буде реалізований у першому випуску. Цей функціонал потребує значних обчислювальних ресурсів і наявності спеціально підготовлених моделей, які з’являться в наступних релізах.
	Business Context
4.1 Operating Enviroment
Розроблювана система використовує сучасні технології та інструменти для забезпечення її функціонування. Для створення серверної частини застосовується Django REST Framework, що забезпечує створення надійного API. Для автентифікації та авторизації використовується бібліотека Simple JWT, яка забезпечує роботу з токенами доступу. Збереження даних реалізовано за допомогою реляційної бази даних PostgreSQL, з якою система взаємодіє через ORM Django.
Фронтенд створюється за допомогою React.js – популярної JavaScript-бібліотеки для побудови динамічних інтерфейсів. Комунікація з серверною частиною здійснюється через бібліотеку Axios, яка забезпечує обробку HTTP-запитів. Для стилізації інтерфейсу застосовується Bootstrap. У якості середовища розробки використовуються Visual Studio Code, Postman для тестування API і Git як система контролю версій.
Мобільний застосунок розробляється з використанням фреймворку React Native, що дозволяє створювати кросплатформенні додатки для iOS та Android на спільній кодовій базі. Для інтеграції з бекендом тут також використовується Axios, а для керування навігацією — бібліотека React Navigation. Система push-сповіщень реалізується за допомогою Firebase Cloud Messaging. Розробка мобільного клієнта ведеться в середовищі Android Studio, із використанням емулятора для тестування.

Список використаних джерел:
	Honeywell. Honeywell Connected Safety. URL: https://www.honeywell.com (дата звернення: 19.04.2025).
	Bosch. Bosch Building Technologies. URL: https://www.boschsecurity.com (дата звернення: 21.11.2024).
	Siemens. Siemens Smart Infrastructure. URL: https://new.siemens.com/global/en/products/buildings/smart-infrastructure.html (дата звернення: 21.11.2024).
	IoT For All. URL: https://www.iotforall.com (дата звернення: 23.11.2024).

